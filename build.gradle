plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.netflix.dgs.codegen' version '6.0.3'
    id 'org.graalvm.buildtools.native' version '0.9.28'
    id 'com.google.cloud.tools.jib' version '3.4.0'

}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

// Jib 플러그인 설정
jib {
    from {
        image = 'openjdk:17-alpine' // 기반 이미지로 OpenJDK 17 Alpine 사용
    }
    to {
        image = '337840261755.dkr.ecr.ap-northeast-2.amazonaws.com/hss6211:hi' // ECR에 푸시할 이미지
    }
}

dependencies {
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // Spring Data JPA 추가
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.25' // MySQL Connector/J 추가
    implementation 'com.google.protobuf:protobuf-java:3.19.6' // protobuf-java 추가
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
}

tasks.named('test') {
    useJUnitPlatform()
}

generateJava {
    schemaPaths = ["${projectDir}/src/main/resources/graphql-client"]
    packageName = 'com.example.demo.codegen'
    generateClient = true
}